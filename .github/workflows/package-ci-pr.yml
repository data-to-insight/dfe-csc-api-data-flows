name: Package CI (PR)

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'api_pipeline/**'
      - 'pyproject.toml'
      - 'MANIFEST.in'
      - 'README.md'
      - 'mkdocs.yml'
      - 'docs/**'
      - 'scripts/**'
      - '.github/workflows/release-and-docs.yml'
      - 'release.sh'
      - 'sql_json_query/**'

concurrency:
  group: package-pr-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Build sdist & wheel
        run: python -m build --sdist --wheel --outdir dist
      - name: Twine check
        run: twine check dist/*.whl dist/*.tar.gz
      - name: Smoke import
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install dist/*.whl
          python -c "import api_pipeline; print('Import OK:', api_pipeline.__name__)"

  docs:
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install docs extra
        run: |
          python -m pip install --upgrade pip
          pip install ".[docs]"
      - name: Build site
        run: mkdocs build 
